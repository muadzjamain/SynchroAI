{
  "name": "WhatsApp Order Processing",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-order-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ],
      "webhookId": "whatsapp-order-webhook"
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "contextData",
              "type": "object",
              "parameterValue": "={{ $json.contextData }}"
            },
            {
              "name": "messageData",
              "type": "object",
              "parameterValue": "={{ $json.messageData }}"
            },
            {
              "name": "serviceId",
              "type": "string",
              "parameterValue": "={{ $json.serviceId }}"
            },
            {
              "name": "serviceType",
              "type": "string",
              "parameterValue": "={{ $json.serviceType }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b1c2d3e4-f5g6-h7i8-j9k0-l1m2n3o4p5q6",
      "name": "Set Order Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "collection": "services",
        "documentId": "={{ $json.serviceId }}"
      },
      "id": "c1d2e3f4-g5h6-i7j8-k9l0-m1n2o3p4q5r6",
      "name": "Get Service Data",
      "type": "n8n-nodes-base.googleFirestore",
      "typeVersion": 2,
      "position": [
        680,
        300
      ],
      "credentials": {
        "googleFirestoreOAuth2Api": {
          "id": "google-firestore-credentials",
          "name": "Google Firestore Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "MMMM DD, YYYY (h:mma)",
        "outputFieldName": "formattedDate"
      },
      "id": "d1e2f3g4-h5i6-j7k8-l9m0-n1o2p3q4r5s6",
      "name": "Format Current Date",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 1,
      "position": [
        680,
        180
      ]
    },
    {
      "parameters": {
        "jsCode": "// Generate order number\nfunction generateOrderNumber() {\n  const date = new Date();\n  const year = date.getFullYear().toString().slice(-2);\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const day = date.getDate().toString().padStart(2, '0');\n  const random = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\n  return `ORD-${year}${month}${day}-${random}`;\n}\n\n// Get input data\nconst data = $input.first();\nconst service = data;\nconst contextData = data.contextData;\nconst messageData = contextData.messageData;\n\n// Extract order details from message text\nconst messageText = messageData.messageText;\n\n// Create order object\nconst order = {\n  orderId: generateOrderNumber(),\n  serviceId: data.serviceId,\n  businessName: contextData.businessInfo.businessName,\n  customerPhone: messageData.senderId,\n  customerName: messageData.contactName,\n  orderText: messageText,\n  timestamp: messageData.timestamp,\n  formattedDate: data.formattedDate || $node[\"Format Current Date\"].json.formattedDate,\n  status: \"pending\",\n  paymentStatus: \"unpaid\",\n  paymentMethods: service.paymentMethods || [\"qr\"],\n  paymentInfo: {\n    method: \"\",\n    amount: 0,\n    timestamp: \"\",\n    transactionId: \"\"\n  },\n  qrCodeImageInfo: service.qrCodeImageInfo || {},\n  createdAt: new Date().toISOString()\n};\n\nreturn { json: { order } };"
      },
      "id": "e1f2g3h4-i5j6-k7l8-m9n0-o1p2q3r4s5t6",
      "name": "Create Order Record",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {
        "operation": "create",
        "collection": "orders",
        "fields": {
          "values": [
            {
              "name": "orderId",
              "value": "={{ $json.order.orderId }}"
            },
            {
              "name": "serviceId",
              "value": "={{ $json.order.serviceId }}"
            },
            {
              "name": "businessName",
              "value": "={{ $json.order.businessName }}"
            },
            {
              "name": "customerPhone",
              "value": "={{ $json.order.customerPhone }}"
            },
            {
              "name": "customerName",
              "value": "={{ $json.order.customerName }}"
            },
            {
              "name": "orderText",
              "value": "={{ $json.order.orderText }}"
            },
            {
              "name": "timestamp",
              "value": "={{ $json.order.timestamp }}"
            },
            {
              "name": "formattedDate",
              "value": "={{ $json.order.formattedDate }}"
            },
            {
              "name": "status",
              "value": "={{ $json.order.status }}"
            },
            {
              "name": "paymentStatus",
              "value": "={{ $json.order.paymentStatus }}"
            },
            {
              "name": "paymentMethods",
              "value": "={{ $json.order.paymentMethods }}"
            },
            {
              "name": "paymentInfo",
              "value": "={{ $json.order.paymentInfo }}"
            },
            {
              "name": "qrCodeImageInfo",
              "value": "={{ $json.order.qrCodeImageInfo }}"
            },
            {
              "name": "createdAt",
              "value": "={{ $json.order.createdAt }}"
            }
          ]
        }
      },
      "id": "f1g2h3i4-j5k6-l7m8-n9o0-p1q2r3s4t5u6",
      "name": "Save Order to Firestore",
      "type": "n8n-nodes-base.googleFirestore",
      "typeVersion": 2,
      "position": [
        1120,
        300
      ],
      "credentials": {
        "googleFirestoreOAuth2Api": {
          "id": "google-firestore-credentials",
          "name": "Google Firestore Account"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://graph.facebook.com/v18.0/{{ $json.contextData.businessInfo.whatsappNumber }}/messages",
        "sendQuery": false,
        "specifyBody": true,
        "jsonParameters": true,
        "options": {
          "batching": {
            "batch": false
          }
        },
        "bodyParameters": {
          "parameters": [
            {
              "name": "messaging_product",
              "value": "whatsapp"
            },
            {
              "name": "to",
              "value": "={{ $json.order.customerPhone }}"
            },
            {
              "name": "type",
              "value": "text"
            },
            {
              "name": "text",
              "value": "={ \"preview_url\": false, \"body\": \"Thank you for your order!\\n\\nOrder ID: {{ $json.order.orderId }}\\nDate: {{ $json.order.formattedDate }}\\n\\nWe've received your order and will process it shortly. For payment, please use one of these methods: {{ $json.order.paymentMethods.join(', ') }}.\\n\\nThank you for choosing {{ $json.order.businessName }}!\" }"
            }
          ]
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $env.WHATSAPP_API_TOKEN }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "id": "g1h2i3j4-k5l6-m7n8-o9p0-q1r2s3t4u5v6",
      "name": "Send Order Confirmation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        1340,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.contextData.businessInfo.receiveEmails }}",
              "operation": "equals",
              "value2": "yes"
            }
          ]
        }
      },
      "id": "h1i2j3k4-l5m6-n7o8-p9q0-r1s2t3u4v5w6",
      "name": "IF (Email Notifications Enabled)",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1560,
        300
      ]
    },
    {
      "parameters": {
        "fromEmail": "={{ $env.NOTIFICATION_EMAIL }}",
        "toEmail": "={{ $env.ADMIN_EMAIL }}",
        "subject": "=New Order Received: {{ $json.order.orderId }}",
        "text": "=A new order has been received via WhatsApp.\n\nOrder Details:\nOrder ID: {{ $json.order.orderId }}\nBusiness: {{ $json.order.businessName }}\nCustomer: {{ $json.order.customerName }}\nPhone: {{ $json.order.customerPhone }}\nDate: {{ $json.order.formattedDate }}\n\nOrder Message:\n{{ $json.order.orderText }}\n\nPayment Status: {{ $json.order.paymentStatus }}\n\nPlease log in to your SynchroAI dashboard to process this order."
      },
      "id": "i1j2k3l4-m5n6-o7p8-q9r0-s1t2u3v4w5x6",
      "name": "Send Email Notification",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        1780,
        240
      ],
      "credentials": {
        "smtp": {
          "id": "smtp-credentials",
          "name": "SMTP Account"
        }
      }
    },
    {
      "parameters": {},
      "id": "j1k2l3m4-n5o6-p7q8-r9s0-t1u2v3w4x5y6",
      "name": "No-Op Node",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        1780,
        400
      ]
    },
    {
      "parameters": {
        "content": "success",
        "options": {
          "statusCode": 200
        }
      },
      "id": "k1l2m3n4-o5p6-q7r8-s9t0-u1v2w3x4y5z6",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2000,
        300
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Set Order Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Order Parameters": {
      "main": [
        [
          {
            "node": "Format Current Date",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Service Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Service Data": {
      "main": [
        [
          {
            "node": "Create Order Record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Current Date": {
      "main": [
        [
          {
            "node": "Create Order Record",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Order Record": {
      "main": [
        [
          {
            "node": "Save Order to Firestore",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Order to Firestore": {
      "main": [
        [
          {
            "node": "Send Order Confirmation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Order Confirmation": {
      "main": [
        [
          {
            "node": "IF (Email Notifications Enabled)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF (Email Notifications Enabled)": {
      "main": [
        [
          {
            "node": "Send Email Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No-Op Node",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email Notification": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No-Op Node": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveManualExecutions": true
  },
  "staticData": null,
  "tags": [
    {
      "name": "SynchroAI"
    },
    {
      "name": "WhatsApp"
    },
    {
      "name": "Order"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-05-16T04:00:00.000Z",
  "versionId": "5678ijkl-9012-34mn-opqr-stuvwxyzabcd"
}
