{
  "name": "AI Model Integration (Gemini) - Standard Nodes",
  "nodes": [
    {
      "parameters": {
        "mode": "manual"
      },
      "id": "e5b077d9-5f3d-4c1e-9d9c-0a9f8d8d7a3a",
      "name": "Manual Trigger",
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "serviceId",
              "value": "={{ $json.serviceId || \"YOUR_SERVICE_ID_HERE\" }}"
            }
          ]
        }
      },
      "id": "b8a1c3d5-7e6f-4a2b-9c3d-5e7f8a9b0c1d",
      "name": "Set Service ID",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "collection": "services",
        "documentId": "={{ $node[\"Set Service ID\"].json.serviceId }}"
      },
      "id": "c1d2e3f4-g5h6-i7j8-k9l0-m1n2o3p4q5r6",
      "name": "Get Service Data",
      "type": "n8n-nodes-base.googleFirestore",
      "typeVersion": 2,
      "credentials": {
        "googleFirestoreOAuth2Api": {
          "id": "google-firestore-credentials",
          "name": "Google Firestore Account"
        }
      },
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "businessName",
              "type": "string",
              "parameterValue": "={{ $json.businessName || \"Business\" }}"
            },
            {
              "name": "email",
              "type": "string",
              "parameterValue": "={{ $json.email || \"\" }}"
            },
            {
              "name": "whatsappNumber",
              "type": "string",
              "parameterValue": "={{ $json.whatsappNumber || \"\" }}"
            },
            {
              "name": "businessWebsite",
              "type": "string",
              "parameterValue": "={{ $json.businessWebsite || \"\" }}"
            },
            {
              "name": "aiRole",
              "type": "string",
              "parameterValue": "={{ $json.aiRole || \"Customer Service Assistant\" }}"
            },
            {
              "name": "faqKnowledgeBase",
              "type": "string",
              "parameterValue": "={{ $json.faqFile || \"\" }}"
            },
            {
              "name": "catalogFile",
              "type": "string",
              "parameterValue": "={{ $json.catalogFile || \"\" }}"
            },
            {
              "name": "aiTone",
              "type": "string",
              "parameterValue": "={{ $json.aiTone || \"Professional\" }}"
            },
            {
              "name": "paymentMethod",
              "type": "string",
              "parameterValue": "={{ $json.paymentProcessing || \"Not specified\" }}"
            },
            {
              "name": "gmailNotificationPreference",
              "type": "string",
              "parameterValue": "={{ $json.receiveEmails || \"yes\" }}"
            },
            {
              "name": "combinedKnowledgeBase",
              "type": "string",
              "parameterValue": "={{ $json.faqTextContent || \"No knowledge base available\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c9d8e7f6-g5h4-i3j2-k1l0-m9n8o7p6q5r4",
      "name": "Extract Service Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [
        680,
        420
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "MMMM DD, YYYY (h:mma)",
        "outputFieldName": "formattedDate"
      },
      "id": "d0e1f2g3-h4i5-j6k7-l8m9-n0o1p2q3r4s5",
      "name": "Format Current Date",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 1,
      "position": [
        900,
        180
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "systemPrompt",
              "type": "string",
              "parameterValue": "=You are an AI assistant for {{ $node[\"Extract Service Parameters\"].json.businessName }}. \n\nYour role is: {{ $node[\"Extract Service Parameters\"].json.aiRole || 'Customer Service Assistant' }}.\n\nYou should respond in a {{ $node[\"Extract Service Parameters\"].json.aiTone || 'Professional' }} tone.\n\nToday's date is {{ $node[\"Format Current Date\"].json.formattedDate }}.\n\nBusiness contact information:\nWhatsApp: {{ $node[\"Extract Service Parameters\"].json.whatsappNumber }}\nEmail: {{ $node[\"Extract Service Parameters\"].json.email }}\n{{ $node[\"Extract Service Parameters\"].json.businessWebsite ? 'Website: ' + $node[\"Extract Service Parameters\"].json.businessWebsite : '' }}\n\nPayment processing method: {{ $node[\"Extract Service Parameters\"].json.paymentMethod || 'Not specified' }}\n\nYou have access to the following knowledge base to help answer customer questions:\n\n{{ $node[\"Extract Service Parameters\"].json.combinedKnowledgeBase }}\n\nWhen responding to customers:\n1. Be concise and helpful\n2. Only provide information that is contained in the knowledge base\n3. If you don't know the answer, politely say so and offer to connect the customer with a human representative\n4. Never make up information\n5. Format WhatsApp messages appropriately with short paragraphs and clear structure\n6. Use emojis sparingly and professionally\n7. Always maintain the specified tone in your responses"
            }
          ]
        },
        "options": {}
      },
      "id": "d1e2f3g4-h5i6-j7k8-l9m0-n1o2p3q4r5s6",
      "name": "Prepare AI Context",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [
        900,
        300
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "modelParameters",
              "type": "json",
              "parameterValue": "{\n  \"model\": \"gemini-pro\",\n  \"temperature\": 0.2,\n  \"maxOutputTokens\": 1024,\n  \"topK\": 40,\n  \"topP\": 0.95\n}"
            }
          ]
        },
        "options": {}
      },
      "id": "e1f2g3h4-i5j6-k7l8-m9n0-o1p2q3r4s5t6",
      "name": "Set Model Parameters",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [
        900,
        420
      ]
    },
    {
      "parameters": {
        "url": "=https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key={{$env.GEMINI_API_KEY}}",
        "method": "POST",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"contents\": [\n    {\n      \"role\": \"user\",\n      \"parts\": [\n        {\n          \"text\": \"Test the AI assistant with this query: What products do you offer?\"\n        }\n      ]\n    }\n  ],\n  \"systemInstruction\": {\n    \"parts\": [\n      {\n        \"text\": \"{{$node[\"Prepare AI Context\"].json.systemPrompt}}\"\n      }\n    ]\n  },\n  \"generationConfig\": {{$node[\"Set Model Parameters\"].json.modelParameters}}\n}",
        "options": {
          "response": {
            "fullResponse": true
          }
        }
      },
      "id": "f1g2h3i4-j5k6-l7m8-n9o0-p1q2r3s4t5u6",
      "name": "Test Gemini API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        1120,
        300
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "testResponse",
              "type": "string",
              "parameterValue": "={{ $json.body.candidates[0].content.parts[0].text }}"
            },
            {
              "name": "success",
              "type": "boolean",
              "parameterValue": "={{ $json.body && $json.body.candidates && $json.body.candidates.length > 0 }}"
            },
            {
              "name": "error",
              "type": "string",
              "parameterValue": "={{ $json.body && $json.body.candidates && $json.body.candidates.length > 0 ? null : 'Invalid or empty response structure' }}"
            },
            {
              "name": "testedAt",
              "type": "string",
              "parameterValue": "={{ $node[\"Format Current Date\"].json.formattedDate }}"
            }
          ]
        },
        "options": {}
      },
      "id": "g1h2i3j4-k5l6-m7n8-o9p0-q1r2s3t4u5v6",
      "name": "Process API Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [
        1340,
            {
              "name": "aiTestedAt",
              "value": "={{$firestore.serverTimestamp()}}"
            },
            {
              "name": "aiTestedAtFormatted",
              "value": "={{ $node[\"Process API Response\"].json.testedAt }}"
            }
          ]
        }
      },
      "id": "h1i2j3k4-l5m6-n7o8-p9q0-r1s2t3u4v5w6",
      "name": "Update Service with AI Context",
      "type": "n8n-nodes-base.firestore",
      "typeVersion": 2,
      "position": [
        1560,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $node[\"Extract Service Parameters\"].json.gmailNotificationPreference }}",
              "operation": "equals",
              "value2": "yes"
            }
          ]
        }
      },
      "id": "i1j2k3l4-m5n6-n7o8-p9q0-r1s2t3u4v5w6",
      "name": "IF (Email Notifications Enabled)",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1780,
        300
      ]
    },
    {
      "parameters": {
        "authentication": "genericCredentialType",
        "genericAuthType": "basicAuth",
        "genericAuthTypeBasicAuth": {
          "user": "={{ $env.SMTP_USERNAME }}",
          "password": "={{ $env.SMTP_PASSWORD }}"
        },
        "fromEmail": "={{$env.NOTIFICATION_EMAIL}}",
        "toEmail": "={{ $node[\"Extract Service Parameters\"].json.email }}",
        "subject": "=AI Assistant Ready - {{ $node[\"Extract Service Parameters\"].json.businessName }} - {{ $node[\"Process API Response\"].json.testedAt }}",
        "html": "<h2>Your AI Assistant is Ready!</h2>\n<p>Your SynchroAI assistant has been configured and is ready to use.</p>\n\n<p><strong>Business:</strong> {{ $node[\"Extract Service Parameters\"].json.businessName }}<br>\n<strong>Tested:</strong> {{ $node[\"Process API Response\"].json.testedAt }}</p>\n\n<p>We've tested your AI assistant with a sample question and it responded successfully. Your assistant is now ready to handle customer inquiries via WhatsApp.</p>\n\n<div style=\"background-color: #f5f5f5; padding: 15px; border-radius: 5px; margin: 15px 0;\">\n  <p><strong>Test Question:</strong> \"What products do you offer?\"</p>\n  \n  <p><strong>AI Response:</strong><br>\n  \"{{ $node[\"Process API Response\"].json.testResponse }}\"</p>\n</div>\n\n<p><strong>Your knowledge base includes:</strong><br>\n{{ $json.faqKnowledgeBase ? '- FAQ knowledge base file' : '' }}<br>\n{{ $json.catalogFile ? '- Product/Service Catalogue' : '' }}</p>\n\n<p><em>This is an automated notification from SynchroAI.</em></p>"
      },
      "id": "j1k2l3m4-n5o6-p7q8-r9s0-t1u2v3w4x5y6",
      "name": "Send Email Notification",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 1,
      "position": [
        2000,
        240
      ]
    },
    {
      "parameters": {},
      "id": "k1l2m3n4-o5p6-q7r8-s9t0-u1v2w3x4y5z6",
      "name": "No-Op Node",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        2000,
        400
      ]
    }
  ],
  "connections": {
    "Manual Trigger": {
      "main": [
        [
          {
            "node": "Set Service ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Service ID": {
      "main": [
        [
          {
            "node": "Get Combined Knowledge Base",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Service Data": {
      "main": [
        [
          {
            "node": "Extract Service Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Service Parameters": {
      "main": [
        [
          {
            "node": "Format Current Date",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prepare AI Context",
            "type": "main",
            "index": 0
          },
          {
            "node": "Set Model Parameters",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Current Date": {
      "main": [
        [
          {
            "node": "Prepare AI Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare AI Context": {
      "main": [
        [
          {
            "node": "Test Gemini API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Model Parameters": {
      "main": [
        [
          {
            "node": "Test Gemini API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Test Gemini API": {
      "main": [
        [
          {
            "node": "Process API Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process API Response": {
      "main": [
        [
          {
            "node": "Update Service with AI Context",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Service with AI Context": {
      "main": [
        [
          {
            "node": "IF (Email Notifications Enabled)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF (Email Notifications Enabled)": {
      "main": [
        [
          {
            "node": "Send Email Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No-Op Node",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveManualExecutions": true
  },
  "staticData": null,
  "tags": [
    {
      "name": "SynchroAI"
    },
    {
      "name": "AI"
    },
    {
      "name": "Gemini"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-05-15T15:48:58.000Z",
  "versionId": "7890ghij-1234-56kl-mnop-qrstuvwxyzab"
}
