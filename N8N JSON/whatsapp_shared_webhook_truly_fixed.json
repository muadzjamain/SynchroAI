{
  "name": "WhatsApp Shared Webhook",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "whatsapp-webhook",
        "responseMode": "responseNode",
        "options": {
          "allowedMethods": ["GET", "POST"]
        }
      },
      "id": "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ],
      "webhookId": "whatsapp-webhook"
    },
    {
      "parameters": {
        "jsCode": "// Extract data from webhook payload\nconst data = $input.first();\n\n// Check if this is a verification request\nif (data.method === 'GET') {\n  // WhatsApp verification request\n  return {\n    json: {\n      mode: 'verification',\n      challenge: data.query['hub.challenge'],\n      verify_token: data.query['hub.verify_token']\n    }\n  };\n}\n\n// Handle incoming message\nif (data.method === 'POST' && data.body && data.body.entry) {\n  const entry = data.body.entry[0];\n  const changes = entry.changes[0];\n  const value = changes.value;\n  \n  // Process only if there are messages\n  if (value.messages && value.messages.length > 0) {\n    const message = value.messages[0];\n    const contact = value.contacts[0];\n    \n    return {\n      json: {\n        mode: 'message',\n        senderPhone: message.from,\n        recipientPhone: value.metadata.display_phone_number,\n        messageId: message.id,\n        timestamp: message.timestamp,\n        messageType: message.type,\n        messageText: message.text ? message.text.body : '',\n        contactName: contact.profile.name,\n        waId: contact.wa_id\n      }\n    };\n  }\n}\n\n// Default response\nreturn { json: { mode: 'unknown' } };"
      },
      "id": "b1c2d3e4-f5g6-h7i8-j9k0-l1m2n3o4p5q6",
      "name": "Extract WhatsApp Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "operation": "formatDate",
        "date": "={{ $now }}",
        "format": "MMMM DD, YYYY (h:mma)",
        "outputFieldName": "formattedDate"
      },
      "id": "c1d2e3f4-g5h6-i7j8-k9l0-m1n2o3p4q5r6",
      "name": "Format Timestamp",
      "type": "n8n-nodes-base.dateTime",
      "typeVersion": 1,
      "position": [
        680,
        180
      ]
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "allConditions": true
                },
                "conditions": [
                  {
                    "id": "1",
                    "leftValue": "={{ $json.mode }}",
                    "rightValue": "verification",
                    "operator": "equals"
                  }
                ]
              },
              "destination": "verification",
              "outputIndex": 0
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "allConditions": true
                },
                "conditions": [
                  {
                    "id": "2",
                    "leftValue": "={{ $json.mode }}",
                    "rightValue": "message",
                    "operator": "equals"
                  }
                ]
              },
              "destination": "message",
              "outputIndex": 1
            }
          ]
        },
        "defaultDestination": "default",
        "defaultOutputIndex": 2
      },
      "id": "d1e2f3g4-h5i6-j7k8-l9m0-n1o2p3q4r5s6",
      "name": "Router",
      "type": "n8n-nodes-base.router",
      "typeVersion": 1,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "e1f2g3h4-i5j6-k7l8-m9n0-o1p2q3r4s5t6",
      "name": "Verification Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        900,
        100
      ]
    },
    {
      "parameters": {
        "content": "success",
        "options": {
          "statusCode": 200
        }
      },
      "id": "f1g2h3i4-j5k6-l7m8-n9o0-p1q2r3s4t5u6",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2200,
        300
      ]
    },
    {
      "parameters": {
        "content": "error",
        "options": {
          "statusCode": 400
        }
      },
      "id": "g1h2i3j4-k5l6-m7n8-o9p0-q1r2s3t4u5v6",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        900,
        500
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "fieldPath": [
          {
            "path": "services",
            "queryConditions": [
              {
                "field": "whatsappNumber",
                "operator": "==",
                "value": "={{ $json.recipientPhone }}"
              }
            ]
          }
        ]
      },
      "id": "h1i2j3k4-l5m6-n7o8-p9q0-r1s2t3u4v5w6",
      "name": "Get Service by WhatsApp Number",
      "type": "n8n-nodes-base.googleFirestore",
      "typeVersion": 2,
      "position": [
        900,
        300
      ],
      "credentials": {
        "googleFirestoreOAuth2Api": {
          "id": "google-firestore-credentials",
          "name": "Google Firestore Account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $json.documents.length }}",
              "operation": "larger",
              "value2": 0
            }
          ]
        }
      },
      "id": "i1j2k3l4-m5n6-o7p8-q9r0-s1t2u3v4w5x6",
      "name": "IF Service Found",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1120,
        300
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "service",
              "type": "object",
              "parameterValue": "={{ $json.documents[0] }}"
            },
            {
              "name": "serviceId",
              "type": "string",
              "parameterValue": "={{ $json.documents[0].__id }}"
            },
            {
              "name": "serviceType",
              "type": "string",
              "parameterValue": "={{ $json.documents[0].type || \"faq\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "j1k2l3m4-n5o6-p7q8-r9s0-t1u2v3w4x5y6",
      "name": "Set Service Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [
        1340,
        240
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.serviceType }}",
              "operation": "equals",
              "value2": "faq"
            }
          ]
        }
      },
      "id": "k1l2m3n4-o5p6-q7r8-s9t0-u1v2w3x4y5z6",
      "name": "IF (FAQ Service)",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1340,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.serviceType }}",
              "operation": "equals",
              "value2": "order"
            }
          ]
        }
      },
      "id": "l1m2n3o4-p5q6-r7s8-t9u0-v1w2x3y4z5a6",
      "name": "IF (Order Service)",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1560,
        400
      ]
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "contextData",
              "type": "object",
              "parameterValue": "={{ {\n  \"messageData\": {\n    \"senderId\": $json.senderPhone,\n    \"recipientId\": $json.recipientPhone,\n    \"timestamp\": $json.timestamp,\n    \"messageId\": $json.messageId,\n    \"messageText\": $json.messageText,\n    \"contactName\": $json.contactName,\n    \"formattedDate\": $node[\"Format Timestamp\"].json.formattedDate\n  },\n  \"businessInfo\": {\n    \"businessName\": $json.service.businessName,\n    \"businessWebsite\": $json.service.businessWebsite,\n    \"businessHours\": $json.service.businessHours,\n    \"whatsappNumber\": $json.service.whatsappNumber\n  },\n  \"serviceInfo\": {\n    \"serviceId\": $json.serviceId,\n    \"serviceType\": $json.serviceType,\n    \"aiRole\": $json.service.aiRole,\n    \"aiTone\": $json.service.aiTone,\n    \"systemPrompt\": $json.service.aiSystemPrompt\n  },\n  \"contentInfo\": {\n    \"faqFileInfo\": $json.service.faqFileInfo,\n    \"catalogFileInfo\": $json.service.catalogFileInfo,\n    \"faqTextContent\": $json.service.faqTextContent,\n    \"catalogTextContent\": $json.service.catalogTextContent\n  },\n  \"bankingInfo\": {\n    \"bankName\": $json.service.bankName,\n    \"accountHolderName\": $json.service.accountHolderName,\n    \"accountNumber\": $json.service.accountNumber\n  },\n  \"paymentInfo\": {\n    \"paymentMethods\": $json.service.paymentMethods,\n    \"paymentProcessing\": $json.service.paymentProcessing,\n    \"qrCodeImageInfo\": $json.service.qrCodeImageInfo\n  }\n} }}"
            }
          ]
        },
        "options": {}
      },
      "id": "m1n2o3p4-q5r6-s7t8-u9v0-w1x2y3z4a5b6",
      "name": "Prepare Context Data",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [
        1560,
        240
      ]
    },
    {
      "parameters": {
        "operation": "create",
        "collection": "conversations",
        "fields": {
          "values": [
            {
              "name": "serviceId",
              "value": "={{ $json.serviceId }}"
            },
            {
              "name": "senderPhone",
              "value": "={{ $json.senderPhone }}"
            },
            {
              "name": "recipientPhone",
              "value": "={{ $json.recipientPhone }}"
            },
            {
              "name": "messageText",
              "value": "={{ $json.messageText }}"
            },
            {
              "name": "timestamp",
              "value": "={{ $json.timestamp }}"
            },
            {
              "name": "formattedDate",
              "value": "={{ $node[\"Format Timestamp\"].json.formattedDate }}"
            },
            {
              "name": "messageId",
              "value": "={{ $json.messageId }}"
            },
            {
              "name": "contactName",
              "value": "={{ $json.contactName }}"
            },
            {
              "name": "serviceType",
              "value": "={{ $json.serviceType }}"
            },
            {
              "name": "createdAt",
              "value": "={{ $now }}"
            }
          ]
        }
      },
      "id": "n1o2p3q4-r5s6-t7u8-v9w0-x1y2z3a4b5c6",
      "name": "Log Conversation",
      "type": "n8n-nodes-base.googleFirestore",
      "typeVersion": 2,
      "position": [
        1780,
        240
      ],
      "credentials": {
        "googleFirestoreOAuth2Api": {
          "id": "google-firestore-credentials",
          "name": "Google Firestore Account"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "aiPrompt",
              "type": "string",
              "parameterValue": "={{ $json.contextData.serviceInfo.systemPrompt + \"\\n\\nCustomer Name: \" + $json.contextData.messageData.contactName + \"\\nCustomer Message: \" + $json.contextData.messageData.messageText + \"\\n\\nPlease provide a helpful response based on the information provided.\" }}"
            }
          ]
        },
        "options": {}
      },
      "id": "o1p2q3r4-s5t6-u7v8-w9x0-y1z2a3b4c5d6",
      "name": "Prepare AI Request",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [
        1780,
        400
      ]
    },
    {
      "parameters": {
        "provider": "gemini",
        "model": "gemini-pro",
        "prompt": {
          "text": "={{ $json.aiPrompt }}"
        },
        "options": {
          "temperature": 0.2,
          "maxOutputTokens": 1024
        }
      },
      "id": "p1q2r3s4-t5u6-v7w8-x9y0-z1a2b3c4d5e6",
      "name": "Get Gemini AI Response",
      "type": "n8n-nodes-base.ai",
      "typeVersion": 1,
      "position": [
        2000,
        400
      ],
      "credentials": {
        "googleGenerativeAiApi": {
          "id": "google-gemini-credentials",
          "name": "Google Gemini API"
        }
      }
    },
    {
      "parameters": {
        "fields": {
          "values": [
            {
              "name": "responseText",
              "type": "string",
              "parameterValue": "={{ $json.text }}"
            }
          ]
        },
        "options": {}
      },
      "id": "q1r2s3t4-u5v6-w7x8-y9z0-a1b2c3d4e5f6",
      "name": "Extract AI Response",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3,
      "position": [
        2000,
        240
      ]
    },
    {
      "parameters": {
        "url": "=https://graph.facebook.com/v18.0/{{ $json.recipientPhone }}/messages",
        "sendQuery": false,
        "specifyBody": true,
        "jsonParameters": true,
        "options": {
          "batching": {
            "batch": false
          }
        },
        "bodyParameters": {
          "parameters": [
            {
              "name": "messaging_product",
              "value": "whatsapp"
            },
            {
              "name": "to",
              "value": "={{ $json.senderPhone }}"
            },
            {
              "name": "type",
              "value": "text"
            },
            {
              "name": "text",
              "value": "={ \"preview_url\": false, \"body\": \"{{ $json.responseText }}\" }"
            }
          ]
        },
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $env.WHATSAPP_API_TOKEN }}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        }
      },
      "id": "r1s2t3u4-v5w6-x7y8-z9a0-b1c2d3e4f5g6",
      "name": "Send WhatsApp Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        2200,
        120
      ]
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "url": "=http://localhost:5678/webhook/whatsapp-order-webhook",
        "sendQuery": false,
        "allowUnauthorizedCerts": true,
        "options": {},
        "sendBody": true,
        "contentType": "json",
        "bodyParameters": {
          "parameters": [
            {
              "name": "contextData",
              "value": "={{ $json.contextData }}"
            },
            {
              "name": "messageData",
              "value": "={{ $json.contextData.messageData }}"
            },
            {
              "name": "serviceId",
              "value": "={{ $json.serviceId }}"
            },
            {
              "name": "serviceType",
              "value": "={{ $json.serviceType }}"
            }
          ]
        }
      },
      "id": "s1t2u3v4-w5x6-y7z8-a9b0-c1d2e3f4g5h6",
      "name": "Trigger Order Processing",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        1780,
        560
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Extract WhatsApp Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract WhatsApp Data": {
      "main": [
        [
          {
            "node": "Format Timestamp",
            "type": "main",
            "index": 0
          },
          {
            "node": "Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Timestamp": {
      "main": [
        [
          {
            "node": "Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Router": {
      "main": [
        [
          {
            "node": "Verification Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Service by WhatsApp Number",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Service by WhatsApp Number": {
      "main": [
        [
          {
            "node": "IF Service Found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF Service Found": {
      "main": [
        [
          {
            "node": "Set Service Data",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Service Data": {
      "main": [
        [
          {
            "node": "Prepare Context Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "IF (FAQ Service)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF (FAQ Service)": {
      "main": [
        [
          {
            "node": "IF (Order Service)",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF (Order Service)": {
      "main": [
        [
          {
            "node": "Prepare AI Request",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Trigger Order Processing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Context Data": {
      "main": [
        [
          {
            "node": "Log Conversation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Conversation": {
      "main": [
        [
          {
            "node": "Extract AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare AI Request": {
      "main": [
        [
          {
            "node": "Get Gemini AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Gemini AI Response": {
      "main": [
        [
          {
            "node": "Extract AI Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract AI Response": {
      "main": [
        [
          {
            "node": "Send WhatsApp Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send WhatsApp Response": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Trigger Order Processing": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1",
    "saveExecutionProgress": true,
    "saveManualExecutions": true
  },
  "staticData": null,
  "tags": [
    {
      "name": "SynchroAI"
    },
    {
      "name": "WhatsApp"
    },
    {
      "name": "Webhook"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2025-05-16T04:00:00.000Z",
  "versionId": "9876abcd-5432-10ef-ghij-klmnopqrstuv"
}
